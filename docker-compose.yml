services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: media_inbox_postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-media_inbox}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-media_inbox}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for BullMQ and caching
  redis:
    image: redis:7-alpine
    container_name: media_inbox_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: media_inbox_minio
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nest.js Application (will be built locally)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: media_inbox_app
    env_file:
      - .env
    ports:
      - '${PORT:-3000}:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-media_inbox}?schema=public
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-minioadmin}
      - S3_BUCKET=${S3_BUCKET:-media-inbox}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE:-true}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:
  minio_data:
